//Task:
// Create a solution that will tell us what poker set we have. 
// The solution is to deal us 5 cards from the standard 52 card deck. 
// After that the solution is to tell us what is the best poker set


class Deck{
    hand;  //5 random cards
    cardValue = {"2":2, "3":3, "4":4, "5":5, "6":6, "7":7, "8":8, "9":9, "10":10, "Jack":11, "Queen":12, "King":13, "Ace":14};
    rank = {'Royal Flush!': 10, 'Straight Flush!':9,'Four of a kind!': 8, 'Full house!': 7, 'Flush!': 6, 'Straight!': 5, 'Three of a kind!': 4, 'Two Pairs!': 3, 'One Pair!': 2, "Hight card!": 1};
    Card = class{
      constructor(suit, cardRank){
        this.suit = suit;
        this.cardRank = cardRank
      };
    };
  createDeck(){  // Create 52 card deck and hand
      const suits = ["clubs","diamonds","hearts","spades"];
      const deck = suits.flatMap(e => Object.keys(this.cardValue).map(el => new this.Card(e, el))); // 52 card deck
      this.hand = deck.slice(0,5).flatMap(() => deck.splice(Math.floor(Math.random()*(deck.length)),1)); // 5 cards
      this.hand.sort((a,b) => this.cardValue[a.cardRank] - this.cardValue[b.cardRank]);
      return this.hand
  };
  isHandFlush(){  // Check : Royal Flush, Straight Flush, Flush, Straight
      let truth = 0, win = 1;
      const colors = this.hand.every(e => e.suit === this.hand[0].suit);
      for(let i = 0; i <= 3; i++){
          (this.cardValue[this.hand[i].cardRank] - this.cardValue[this.hand[i+1].cardRank] === -1) ? truth++:null;
      };
         if(this.cardValue[this.hand[0].cardRank] === 10 && truth === 4  && colors) win = 10;
          else if(truth === 4  && colors) win = 9;
          else if(colors) win = 6;
          else if(truth === 4) win = 5;     
      return win
  };
  isHandValue(){  // Check : Four of a kind, Full house, Three of a kind, Two Pairs, One Pair 
      let win = 1;
      const value =  this.hand.map(e => this.cardValue[e.cardRank]);
      const array = [...new Set(value)].map(el => value.filter(e => e === el));
          if(array.length === 2 && array.some(e => e.length === 4)) win = 8;
          else if(array.length === 2 && array.some(e => e.length === 3)) win = 7;
          else if(array.length === 3 && array.some(e => e.length === 3)) win = 4;
          else if(array.length === 3 && array.some(e => e.length === 2)) win = 3;
          else if(array.length === 4) win = 2;
      return win
    };
  result(){  // Return best poker set
      const aray = [this.isHandFlush(), this.isHandValue()].sort((a,b) => a-b);
      let win = Object.keys(this.rank).find(key => this.rank[key] === aray[aray.length-1]);
      win === 'Hight card!' ? win = `Hight card! : ${this.hand[this.hand.length -1].cardRank}` :null;     
      return win         
  };
  };
  const poker = new Deck();
  console.log(poker.createDeck());
  console.log(poker.result());